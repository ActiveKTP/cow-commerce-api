// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id                             String           @id @default(cuid())
  name                           String           @default("")
  email                          String           @unique @default("")
  password                       String
  from_Farm_userUpdate           Farm[]           @relation("Farm_userUpdate")
  from_Cow_userUpdate            Cow[]            @relation("Cow_userUpdate")
  from_Breed_userUpdate          Breed[]          @relation("Breed_userUpdate")
  from_CowBreed_userUpdate       CowBreed[]       @relation("CowBreed_userUpdate")
  from_CowPrice_userUpdate       CowPrice[]       @relation("CowPrice_userUpdate")
  from_SemenBeef_userUpdate      SemenBeef[]      @relation("SemenBeef_userUpdate")
  from_Mating_userUpdate         Mating[]         @relation("Mating_userUpdate")
  from_PregnancyCheck_userUpdate PregnancyCheck[] @relation("PregnancyCheck_userUpdate")
  from_Abortion_userUpdate       Abortion[]       @relation("Abortion_userUpdate")
  from_Calving_userUpdate        Calving[]        @relation("Calving_userUpdate")
  from_Calve_userUpdate          Calve[]          @relation("Calve_userUpdate")
  from_Deworming_userUpdate      Deworming[]      @relation("Deworming_userUpdate")
}

model Farm {
  id                       String           @id @default(cuid())
  name                     String           @default("")
  Address                  String           @default("")
  MobileNo                 String           @default("")
  cow                      Cow[]            @relation("Cow_Farm")
  insertAt                 DateTime?        @default(now())
  updatedAt                DateTime?        @updatedAt
  userUpdate               User?            @relation("Farm_userUpdate", fields: [userUpdateId], references: [id])
  userUpdateId             String?          @map("userUpdate")
  from_Mating_Farm         Mating[]         @relation("Mating_Farm")
  from_PregnancyCheck_Farm PregnancyCheck[] @relation("PregnancyCheck_Farm")
  from_Abortion_Farm       Abortion[]       @relation("Abortion_Farm")
  from_Calving_Farm        Calving[]        @relation("Calving_Farm")

  @@index([userUpdateId])
}

model Cow {
  id                      String           @id @default(cuid())
  Farm                    Farm?            @relation("Cow_Farm", fields: [FarmId], references: [id])
  FarmId                  String?          @map("Farm")
  cowId                   String           @default("")
  name                    String           @default("")
  cSex                    String?
  cBirthDate              DateTime?
  cStatus                 String?
  cProductionStatus       String?
  cLactation              Int?
  cNumOfService           Int?
  frontimage_filesize     Int?
  frontimage_extension    String?
  frontimage_width        Int?
  frontimage_height       Int?
  frontimage_id           String?
  sideimage_filesize      Int?
  sideimage_extension     String?
  sideimage_width         Int?
  sideimage_height        Int?
  sideimage_id            String?
  backimage_filesize      Int?
  backimage_extension     String?
  backimage_width         Int?
  backimage_height        Int?
  backimage_id            String?
  cFirstBreed             Boolean          @default(false)
  cSireId                 Cow?             @relation("Cow_cSireId", fields: [cSireIdId], references: [id])
  cSireIdId               String?          @map("cSireId")
  cDamId                  Cow?             @relation("Cow_cDamId", fields: [cDamIdId], references: [id])
  cDamIdId                String?          @map("cDamId")
  cowBreed                CowBreed[]       @relation("CowBreed_cow")
  cDateJoininHerd         DateTime?
  cSource                 String?
  cowPrice                CowPrice[]       @relation("CowPrice_cow")
  isActive                Boolean          @default(true)
  insertAt                DateTime?        @default(now())
  updatedAt               DateTime?        @updatedAt
  userUpdate              User?            @relation("Cow_userUpdate", fields: [userUpdateId], references: [id])
  userUpdateId            String?          @map("userUpdate")
  from_Cow_cSireId        Cow[]            @relation("Cow_cSireId")
  from_Cow_cDamId         Cow[]            @relation("Cow_cDamId")
  from_SemenBeef_cow      SemenBeef[]      @relation("SemenBeef_cow")
  from_Mating_cow         Mating[]         @relation("Mating_cow")
  from_PregnancyCheck_cow PregnancyCheck[] @relation("PregnancyCheck_cow")
  from_Abortion_cow       Abortion[]       @relation("Abortion_cow")
  from_Calving_cow        Calving[]        @relation("Calving_cow")
  from_Calve_cow          Calve[]          @relation("Calve_cow")
  from_Deworming_cow      Deworming[]      @relation("Deworming_cow")

  @@index([FarmId])
  @@index([cSireIdId])
  @@index([cDamIdId])
  @@index([userUpdateId])
}

model Breed {
  id                      String     @id @default(cuid())
  name                    String     @default("")
  breed                   String     @default("")
  insertAt                DateTime?  @default(now())
  updatedAt               DateTime?  @updatedAt
  userUpdate              User?      @relation("Breed_userUpdate", fields: [userUpdateId], references: [id])
  userUpdateId            String?    @map("userUpdate")
  from_CowBreed_breedType CowBreed[] @relation("CowBreed_breedType")

  @@index([userUpdateId])
}

model CowBreed {
  id           String    @id @default(cuid())
  cow          Cow?      @relation("CowBreed_cow", fields: [cowId], references: [id])
  cowId        String?   @map("cow")
  breedType    Breed?    @relation("CowBreed_breedType", fields: [breedTypeId], references: [id])
  breedTypeId  String?   @map("breedType")
  breedPercent Float?
  insertAt     DateTime? @default(now())
  updatedAt    DateTime? @updatedAt
  userUpdate   User?     @relation("CowBreed_userUpdate", fields: [userUpdateId], references: [id])
  userUpdateId String?   @map("userUpdate")

  @@index([cowId])
  @@index([breedTypeId])
  @@index([userUpdateId])
}

model CowPrice {
  id           String    @id @default(cuid())
  cow          Cow?      @relation("CowPrice_cow", fields: [cowId], references: [id])
  cowId        String?   @map("cow")
  maxPrice     Int?
  minPrice     Int?
  insertAt     DateTime? @default(now())
  updatedAt    DateTime? @updatedAt
  userUpdate   User?     @relation("CowPrice_userUpdate", fields: [userUpdateId], references: [id])
  userUpdateId String?   @map("userUpdate")

  @@index([cowId])
  @@index([userUpdateId])
}

model SemenBeef {
  id                    String    @id @default(cuid())
  cow                   Cow?      @relation("SemenBeef_cow", fields: [cowId], references: [id])
  cowId                 String?   @map("cow")
  name                  String    @default("")
  recivedDate           DateTime
  expireDate            DateTime?
  keepLocation          String    @default("")
  sPrice                Int?
  isActive              Boolean   @default(true)
  insertAt              DateTime? @default(now())
  updatedAt             DateTime? @updatedAt
  userUpdate            User?     @relation("SemenBeef_userUpdate", fields: [userUpdateId], references: [id])
  userUpdateId          String?   @map("userUpdate")
  from_Mating_maSemenId Mating[]  @relation("Mating_maSemenId")

  @@index([cowId])
  @@index([userUpdateId])
}

model Mating {
  id                   String           @id @default(cuid())
  cow                  Cow?             @relation("Mating_cow", fields: [cowId], references: [id])
  cowId                String?          @map("cow")
  maLactation          Int?
  maNumberOfService    Int?
  maMatingMethod       String?          @default("AI")
  maDate               DateTime         @default(now())
  maSemenId            SemenBeef?       @relation("Mating_maSemenId", fields: [maSemenIdId], references: [id])
  maSemenIdId          String?          @map("maSemenId")
  maResult             String?
  insertAt             DateTime?        @default(now())
  updatedAt            DateTime?        @updatedAt
  userUpdate           User?            @relation("Mating_userUpdate", fields: [userUpdateId], references: [id])
  userUpdateId         String?          @map("userUpdate")
  pregnancy            PregnancyCheck[] @relation("PregnancyCheck_mating")
  Farm                 Farm?            @relation("Mating_Farm", fields: [FarmId], references: [id])
  FarmId               String?          @map("Farm")
  from_Abortion_mating Abortion[]       @relation("Abortion_mating")
  from_Calving_mating  Calving[]        @relation("Calving_mating")

  @@index([cowId])
  @@index([maSemenIdId])
  @@index([userUpdateId])
  @@index([FarmId])
}

model PregnancyCheck {
  id            String    @id @default(cuid())
  cow           Cow?      @relation("PregnancyCheck_cow", fields: [cowId], references: [id])
  cowId         String?   @map("cow")
  mating        Mating?   @relation("PregnancyCheck_mating", fields: [matingId], references: [id])
  matingId      String?   @map("mating")
  pcCheckDate   DateTime  @default(now())
  pcCheckResult String?
  insertAt      DateTime? @default(now())
  updatedAt     DateTime? @updatedAt
  userUpdate    User?     @relation("PregnancyCheck_userUpdate", fields: [userUpdateId], references: [id])
  userUpdateId  String?   @map("userUpdate")
  Farm          Farm?     @relation("PregnancyCheck_Farm", fields: [FarmId], references: [id])
  FarmId        String?   @map("Farm")

  @@index([cowId])
  @@index([matingId])
  @@index([userUpdateId])
  @@index([FarmId])
}

model Abortion {
  id             String    @id @default(cuid())
  cow            Cow?      @relation("Abortion_cow", fields: [cowId], references: [id])
  cowId          String?   @map("cow")
  mating         Mating?   @relation("Abortion_mating", fields: [matingId], references: [id])
  matingId       String?   @map("mating")
  abAbortionDate DateTime  @default(now())
  setNewLac      Boolean   @default(false)
  insertAt       DateTime? @default(now())
  updatedAt      DateTime? @updatedAt
  userUpdate     User?     @relation("Abortion_userUpdate", fields: [userUpdateId], references: [id])
  userUpdateId   String?   @map("userUpdate")
  Farm           Farm?     @relation("Abortion_Farm", fields: [FarmId], references: [id])
  FarmId         String?   @map("Farm")

  @@index([cowId])
  @@index([matingId])
  @@index([userUpdateId])
  @@index([FarmId])
}

model Calving {
  id           String    @id @default(cuid())
  cow          Cow?      @relation("Calving_cow", fields: [cowId], references: [id])
  cowId        String?   @map("cow")
  mating       Mating?   @relation("Calving_mating", fields: [matingId], references: [id])
  matingId     String?   @map("mating")
  cvgDate      DateTime  @default(now())
  calve        Calve[]   @relation("Calve_calving")
  insertAt     DateTime? @default(now())
  updatedAt    DateTime? @updatedAt
  userUpdate   User?     @relation("Calving_userUpdate", fields: [userUpdateId], references: [id])
  userUpdateId String?   @map("userUpdate")
  Farm         Farm?     @relation("Calving_Farm", fields: [FarmId], references: [id])
  FarmId       String?   @map("Farm")

  @@index([cowId])
  @@index([matingId])
  @@index([userUpdateId])
  @@index([FarmId])
}

model Calve {
  id           String    @id @default(cuid())
  cow          Cow?      @relation("Calve_cow", fields: [cowId], references: [id])
  cowId        String?   @map("cow")
  calving      Calving?  @relation("Calve_calving", fields: [calvingId], references: [id])
  calvingId    String?   @map("calving")
  cvSex        String
  cvCalveNo    String    @default("")
  cvCalveName  String    @default("")
  insertAt     DateTime? @default(now())
  updatedAt    DateTime? @updatedAt
  userUpdate   User?     @relation("Calve_userUpdate", fields: [userUpdateId], references: [id])
  userUpdateId String?   @map("userUpdate")

  @@index([cowId])
  @@index([calvingId])
  @@index([userUpdateId])
}

model Deworming {
  id           String    @id @default(cuid())
  cow          Cow?      @relation("Deworming_cow", fields: [cowId], references: [id])
  cowId        String?   @map("cow")
  deDate       DateTime  @default(now())
  insertAt     DateTime? @default(now())
  updatedAt    DateTime? @updatedAt
  userUpdate   User?     @relation("Deworming_userUpdate", fields: [userUpdateId], references: [id])
  userUpdateId String?   @map("userUpdate")

  @@index([cowId])
  @@index([userUpdateId])
}